# This is a workflow to get the QA infrastructure provisonned with terraform through CI/CD

name: QA Infrastructure Provisionning

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
    run:
        working-directory: "./qa-gha/us-east-2"
permissions:
    pull-requests: write

env:
    AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
    AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
    tfplan:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps representing the sequence of tasks that will be executed as part of the tfplan job
        steps:
        # Checkout the repository to the GitHub Actions runner
            - name: checkout
              uses: actions/checkout@v4

        # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform fmt
              id: fmt
              run: terraform fmt -check
              continue-on-error: true

            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Validate
              id: validate
              run: terraform validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform plan -no-color
              continue-on-error: true

    tfapply:
        needs: tfplan
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps representing the sequence of tasks that will be executed as part of the tfapply job
        steps:
            # Checkout the repository to the GitHub Actions runner
            - name: checkout
              uses: actions/checkout@v4

            - name: Deploy Terraform
              run: echo "Terraform Apply"

            
